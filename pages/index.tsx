import Head from 'next/head';
import styles from '../styles/Home.module.scss';
import React, {useCallback, useEffect, useState} from 'react';
import { useRouter } from 'next/router';
import { useFormik } from 'formik';
import * as Yup from 'yup';

import { getData } from '../redux/actionCreators/getProducts';
import { useDispatch } from 'react-redux';
import { useTypedSelector } from '../hooks/useTypeSelector';
import { IProduct } from '../redux/reducers';
import Card from "../components/Card/Card";

import { Container, FormControl, Box } from '@mui/material';
import Select from '@mui/material/Select';
import MenuItem from '@mui/material/MenuItem';
import InputLabel from '@mui/material/InputLabel';
import OutlinedInput from '@mui/material/OutlinedInput';

const filterShema = Yup.object().shape({
  searchName: Yup.string().min(3, "The minimum number of characters is 3")
});

const Home: React.FC = (): JSX.Element => {
  const router = useRouter();
  const dispatch = useDispatch();
  const { products, loading } = useTypedSelector((state) => state.products);
  const [ filterData, setFilterData ] = useState<IProduct[]>([]);
  const onFilterData = useCallback((values: { searchName: string | string[]; searchTag: string | string[]; }) => {
      const filterDataByText = products.filter((item) => {
        return (values.searchName.length ? item.name.toLowerCase().includes(values.searchName.toLowerCase()) : true) && (values.searchTag !== '' ? item.bsr_category === values.searchTag : true);
      });
      setFilterData(filterDataByText);
  }, [products, filterData]);
  const filterCategory = Array.from(new Set(products?.map(item => item?.bsr_category)));
  const formik = useFormik({
    initialValues: {
      searchName:"",
      searchTag:  "" 
    },
    validationSchema: filterShema,
    onSubmit: values => {
      router.push(`/?category=${router.query.category}&name=${values.searchName}`);
      formik.setSubmitting(false);
    }
  });
  useEffect(() => {
    if (formik.values.searchTag || formik.values.searchName) {
      onFilterData({searchName:  formik.values.searchName || "", searchTag: formik.values.searchTag});
    }
  }, [formik.values])
  useEffect(() => {
    setFilterData(products);
  }, [products]);

  useEffect(() => {
    dispatch(getData());
  }, [dispatch]);

  return (
    <div className={styles.container}>
      <Head>
        <title>React Shop Next</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <header>
          <form className={styles.headerForm} onSubmit={formik.handleSubmit}>
            <div className={styles.headerInputWrapper}>
              <input
                autoComplete="off"
                type="text"
                name="searchName"
                onChange={formik.handleChange}
                value={formik.values.searchName}
                placeholder="Name"
                className={styles.headerInput}
              />
              <div className={styles.headerInputError}>{
                formik.errors.searchName && formik.touched.searchName && formik.errors.searchName
              }</div>
            </div>
            <FormControl sx={{ m: 1, width: 200, height: "100%" }}>
              <InputLabel id="demo-multiple-name-label">Category</InputLabel>
              <Select
                labelId="demo-multiple-name-label"
                id="demo-multiple-name"
                value={formik?.values.searchTag}
                input={<OutlinedInput label="Name" />}
                onChange={(e) => {
                  formik.setFieldValue('searchTag', e.target.value);
                  router.push(`/?category=${e.target.value}&name=${formik.values.searchName}`);
                }}
              >
                <MenuItem value="">All</MenuItem>
                {
                  filterCategory.map((tag) => {
                      return <MenuItem value={tag} key={tag}>{tag}</MenuItem>;
                  })
                }
              </Select>
            </FormControl>
            <button onClick={() => formik.handleSubmit()} className={styles.headerFormButton}>
              Search
            </button>
          </form>
          </header>
        </Container>
        <Container>
            <Box sx={{display: "flex", flexWrap: "wrap", columnGap: "58px", rowGap: "20px"}}>
              {
                loading ? <div>Loading...</div> : filterData.map(({asin, ...allData}) => {
                  return <Card key={asin} {...allData}/>;
                }) 
              }
            </Box>
        </Container>
    </div>
  );
};

export default Home;